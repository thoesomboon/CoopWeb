@{
    ViewBag.Title = @Text.ProgramName + "ข้อมูลควบคุมระบบ";
    Layout = "~/Views/Shared/_Layout50x.cshtml";
}
@model Coop.Models.POCO.CoopControlModel
@*CoopControl ข้อมูลควบคุมระบบ
    Programmer : Suwan T. 11-10-2020 - 11-10-2020
    Development : 11-10-2020
    Last update : 11-10-2020
    Status :
        Screen :
        "CoopControl", "TransferInDepositType" : Testing
        "CoopControl", "TransferOutDepositType" : Testing
    สิ่งที่ต้องปรับปรุง
    2020-9-18
    1. 
*@
<style>
    .m-portlet--head-sm.m-portlet .m-portlet__foot, .m-portlet--head-sm.m-portlet .m-portlet__body {
        padding-top: 0.5rem;
    }

    .m-portlet--head-sm.m-portlet .m-portlet__head {
        height: 3rem;
    }

    .form-horizontal {
        width: 100%;
    }

    .form-control {
        padding: 0px 5px;
    }

    .form-control {
        display: block;
        width: 100%;
        height: calc(2.0rem + 5px); /*customize for page layout*/
        padding: .85rem 1.15rem;
        line-height: 1.25;
        font-size: 1rem;
        color: #495057;
        background-color: #fff;
        background-clip: padding-box;
        border: 1px solid #ced4da;
        border-radius: .25rem;
        -webkit-transition: border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;
        transition: border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;
        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;
    }

    [readonly].form-control {
        background-color: transparent;
        color: blue;
    }

    .btn.m-btn--custom {
        /*padding: 5px 5px 5px 5px !important;
        font-size: 1rem;
        font-weight: 200;*/
        font-family: Poppins,"Open Sans", sans-serif;
    }

    .btn.m-btn--custom--submit {
        padding: 5px 5px 5px 15px !important;
        font-size: 1rem;
        font-weight: 200;
        font-family: Poppins,"Open Sans", sans-serif;
    }

    .custom-select {
        display: inline-block;
        width: 100%;
        height: calc(2.0rem + 5px); /*customize for page layout*/
        /*height: calc(2.95rem + 2px);*/
        padding: .375rem 1.75rem .375rem .75rem;
        line-height: 1.25;
        color: #495057;
        vertical-align: middle;
        background: #fff url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 5'%3E%3Cpath fill='%23343a40' d='M2 0L0 2h4zm0 5L0 3h4z'/%3E%3C/svg%3E") no-repeat right .75rem center;
        background-size: 8px 10px;
        border: 1px solid #ced4da;
        border-radius: .25rem;
        -webkit-appearance: none;
        -moz-appearance: none;
        /*appearance: none;*/
    }

    .m-subheader {
        padding: 5px 5px 5px 5px;
    }

        .m-subheader .m-subheader__title {
            display: inline-block;
            padding: 5px 10px;
            /*padding-left:;*/
            font-family: Roboto;
            font-weight: 300;
            font-size: 1.55rem;
            font-weight: 500;
            vertical-align: middle;
            margin: 0 15px 0px 0;
            color: #3f4047;
        }

    .d-flex {
        display: -webkit-box !important;
        display: -ms-flexbox !important;
        display: flex !important;
        height: 30px;
    }

    .btn-lg.m-btn--icon-only.m-btn--icon, .btn-group-lg > .btn.m-btn--icon-only.m-btn--icon {
        width: 43px;
        height: 30px;
    }

    .m-body .m-content {
        padding: 5px 5px;
    }

    .custom-select {
        font-family: Poppins,"Open Sans", sans-serif;
    }

    .input-group-sm > .input-group-btn > select.btn, .input-group-sm > select.form-control, .input-group-sm > select.input-group-addon, select.input-sm {
        height: 30px;
    }

    .form-control {
        padding: 5px 5px;
    }

    .form-horizontal .control-label {
        text-align: right;
        margin-bottom: 0px;
        padding-top: 7px;
        font-family: Poppins,"Open Sans", sans-serif;
    }

    .align-right {
        text-align: right;
    }

    .btn-sm, .btn-group-sm > .btn {
        padding: .45rem .8rem;
        font-size: 0.87rem;
        line-height: 0.5;
        border-radius: .2rem;
    }

    .m-btn--custom.btn {
        padding: .75rem 2rem;
        font-size: 1rem;
        font-weight: 200;
        font-family: Poppins,"Open Sans", sans-serif;
    }

    dt, kbd kbd, label {
        font-weight: 400;
    }
</style>

@using (Html.BeginForm("Index", "CoopControl", FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.AntiForgeryToken()
    <div class="m-grid__item m-grid__item--fluid m-wrapmem">
        <!-- BEGIN: Subheader -->
        <div class="m-subheader ">
            <div class="d-flex align-items-center">
                <div class="mr-auto">
                    <h3 class="m-subheader__title m-subheader__title--separator"></h3>
                    <ul class="m-subheader__breadcrumbs m-nav m-nav--inline">
                        <li class="m-nav__item m-nav__item--home">
                            <a href="#" class="m-nav__link m-nav__link--icon">
                                <i class="m-nav__link-icon la la-home"></i>
                            </a>
                        </li>
                        <li class="m-nav__item">
                            <a href="#" class="m-nav__link">
                                <span class="m-nav__link-text">@Text.ProgramName</span>
                            </a>
                        </li>
                        <li class="m-nav__separator">></li>
                        <li class="m-nav__item">
                            <a href="#" class="m-nav__link">
                                <span class="m-nav__link-text">CoopControl</span>
                            </a>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
        <!-- END: Subheader -->
        <div class="m-content">
            <div class="m-content">
                <div class="m-portlet m-portlet--head-sm" m-portlet="true" id="m_portlet_tools_3">
                    <div class="m-portlet__head">
                        <div class="m-portlet__head-caption">
                            <div class="m-portlet__head-title">
                                <span class="m-portlet__head-icon">
                                    <i class="flaticon-interface-10"></i>
                                    <i class="icon-equalizer font-red-sunglo"></i>
                                </span>
                                <div class="caption">
                                    <h3 class="m-portlet__head-text m--font-transform-u m--font-success">
                                        ข้อมูลควบคุมระบบ
                                        <small class="m--font-metal m--font-transform-">Information...</small>
                                    </h3>
                                </div>
                            </div>
                        </div>
                        <div class="m-portlet__head-tools">
                            <ul class="m-portlet__nav"></ul>
                        </div>
                    </div>
                    <div class="m-portlet__body">
                        <div class="table-toolbar">
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group m-form__group row">
                                        <label class="control-label col-md-4 align-left" style="padding-left: 0px!important;">รหัสสหกรณ์</label>
                                        @Html.TextBoxFor(m => m.CoopID, new { @class = "form-control form-control-inline input-small col-md-4", @placeholder = "รหัสสหกรณ์" })
                                        @*@Html.HiddenFor(model => model.AccountNo)*@
                                        @Html.ValidationMessageFor(m => m.CoopID, "", new { @class = "help-block help-block-error required" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group m-form__group row">
                                        <label class="control-label col-md-4 align-left" style="padding-left: 0px!important;">ชื่อสหกรณ์</label>
                                        @Html.TextBoxFor(m => m.CoopName, new { @class = "form-control form-control-inline input-small col-md-8", @placeholder = "ชื่อสหกรณ์" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group m-form__group row">
                                        <label class="control-label col-md-4 align-left" style="padding-left: 0px!important;">ชื่อผู้จัดการ</label>
                                        @Html.TextBoxFor(m => m.ManagerName, new { @class = "form-control form-control-inline input-small col-md-8", @placeholder = "ชื่อผู้จัดการ" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group m-form__group row">
                                        <label class="control-label col-md-4 align-left" style="padding-left: 0px!important;">ที่อยู่</label>
                                        @Html.TextBoxFor(m => m.Address, new { @class = "form-control form-control-inline input-small col-md-6", @placeholder = "ทะเบียนสมาชิก" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group m-form__group row">
                                        <label class="control-label col-md-4 align-left" style="padding-left: 0px!important;">จังหวัด</label>
                                        @Html.TextBoxFor(m => m.Province, new { @class = "form-control form-control-inline input-small col-md-4", @placeholder = "จังหวัด" })
                                        @Html.TextBoxFor(m => m.PostalCode, new { @class = "form-control form-control-inline input-small col-md-2", @placeholder = "รหัสไปรษณีย์" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group m-form__group row">
                                        <label class="control-label col-md-4 align-left" style="padding-left: 0px!important;">เบอร์โทรศัพท์</label>
                                        @Html.TextBoxFor(m => m.Telephone, new { @class = "form-control form-control-inline input-small col-md-4 align-right", @placeholder = "เบอร์โทรศัพท์" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group m-form__group row">
                                        <label class="control-label col-md-4 align-left" style="padding-left: 0px!important;">Fax</label>
                                        @Html.TextBoxFor(m => m.Fax, new { @class = "form-control form-control-inline input-small col-md-4 align-right", @placeholder = "Fax" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group m-form__group row">
                                        <label class="control-label col-md-4 align-left" style="padding-left: 0px!important;">วันที่ทำการวันก่อน</label>
                                        @Html.TextBoxFor(m => m.PrevSystemDateTH, new { @class = "form-control form-control-inline input-small col-md-4 align-right", @placeholder = "วันที่ทำการวันก่อน" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group m-form__group row">
                                        <label class="control-label col-md-4 align-left" style="padding-left: 0px!important;">วันที่ทำการ</label>
                                        @Html.TextBoxFor(m => m.SystemDateTH, new { @class = "form-control form-control-inline input-small col-md-4 align-right", @placeholder = "วันที่ทำการ" })
                                        @*@Html.HiddenFor(model => model.SystemDate)*@
                                        @Html.ValidationMessageFor(m => m.SystemDate, "", new { @class = "help-block help-block-error" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group m-form__group row">
                                        <label class="control-label col-md-4 align-left" style="padding-left: 0px!important;">วันที่ทำการถัดไป</label>
                                        @Html.TextBoxFor(m => m.NextSystemDateTH, new { @class = "form-control form-control-inline input-small col-md-2 align-left", @placeholder = "วันที่ทำการถัดไป" })
                                        @*@Html.HiddenFor(model => model.NextSystemDateTH)*@
                                        @Html.ValidationMessageFor(m => m.NextSystemDateTH, "", new { @class = "help-block help-block-error" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group m-form__group row">
                                        <label class="control-label col-md-4 align-left" style="padding-left: 0px!important;">ปีงบประมาณ</label>
                                        @Html.TextBoxFor(m => m.BudgetYear, new { @class = "form-control form-control-inline input-small col-md-4 align-right", @placeholder = "ปีงบประมาณ" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group m-form__group row">
                                        <label class="control-label col-md-4 align-left" style="padding-left: 0px!important;">วันเริ่มปีงบประมาณ</label>
                                        @Html.TextBoxFor(m => m.StartBudgetDateTH, new { @class = "form-control form-control-inline input-small col-md-4 align-right", @placeholder = "วันเริ่มปีงบประมาณ" })
                                        @*@Html.HiddenFor(model => model.LastBookLine)*@
                                        @Html.ValidationMessageFor(m => m.StartBudgetDateTH, "", new { @class = "help-block help-block-error" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group m-form__group row">
                                        <label class="control-label col-md-4 align-left" style="padding-left: 0px!important;">วันสิ้นสุดปีงบประมาณ</label>
                                        @Html.TextBoxFor(m => m.EndBudgetDateTH, new { @class = "form-control form-control-inline input-small col-md-2 align-left", @placeholder = "วันสิ้นสุดปีงบประมาณ" })
                                        @*@Html.HiddenFor(model => model.EndBudgetDate)*@
                                        @Html.ValidationMessageFor(m => m.EndBudgetDateTH, "", new { @class = "help-block help-block-error" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group m-form__group row">
                                        <label class="control-label col-md-4 align-left" style="padding-left: 0px!important;">ปีงบประมาณ (ปีที่แล้ว)</label>
                                        @Html.TextBoxFor(m => m.PrevBudgetYear, new { @class = "form-control form-control-inline input-small col-md-4 align-right", @placeholder = "ยอดเงินที่ถอนได้" })
                                        @*@Html.HiddenFor(model => model.PrevBudgetYear)*@
                                        @Html.ValidationMessageFor(m => m.PrevBudgetYear, "", new { @class = "help-block help-block-error required" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group m-form__group row">
                                        <label class="control-label col-md-4 align-left" style="padding-left: 0px!important;">วันเริ่มปีงบประมาณ(ปีที่แล้ว)</label>
                                        @Html.TextBoxFor(m => m.PrevStartBudgetDateTH, new { @class = "form-control form-control-inline input-small col-md-4 align-right", @placeholder = "วันเริ่มปีงบประมาณ(ปีที่แล้ว)" })
                                        @Html.ValidationMessageFor(m => m.PrevStartBudgetDateTH, "", new { @class = "help-block help-block-error" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group m-form__group row">
                                        <label class="control-label col-md-4 align-left" style="padding-left: 0px!important;">วันสิ้นสุดปีงบประมาณ(ปีที่แล้ว)</label>
                                        @Html.TextBoxFor(m => m.PrevEndBudgetDateTH, new { @class = "form-control form-control-inline input-small col-md-4 align-right", @placeholder = "วันสิ้นสุดปีงบประมาณ(ปีที่แล้ว)" })
                                        @Html.ValidationMessageFor(m => m.PrevEndBudgetDateTH, "", new { @class = "help-block help-block-error" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group m-form__group row">
                                        <label class="control-label col-md-4 align-left" style="padding-left: 0px!important;">ชื่อผู้จัดการ</label>
                                        @Html.TextBoxFor(m => m.ManagerName, new { @class = "form-control form-control-inline input-small col-md-4 align-right color:blue", @placeholder = "ชื่อผู้จัดการ" })
                                        @*@Html.HiddenFor(model => model.ManagerName)*@
                                        @Html.ValidationMessageFor(m => m.ManagerName, "", new { @class = "help-block help-block-error required" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group m-form__group row">
                                        <label class="control-label col-md-4 align-left" style="padding-left: 0px!important;">งวดบัญขี</label>
                                        @Html.TextBoxFor(m => m.AccountPeriod, new { @class = "form-control form-control-inline input-small col-md-4 align-right color:blue", @placeholder = "งวดบัญขี" })
                                        @Html.ValidationMessageFor(m => m.AccountPeriod, "", new { @class = "help-block help-block-error required" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group m-form__group row">
                                        <label class="control-label col-md-4 align-left" style="padding-left: 0px!important;">จำนวนวันใน 1 ปี</label>
                                        @Html.TextBoxFor(m => m.DaysINYear, new { @class = "form-control form-control-inline input-small col-md-4 align-right color:blue", @placeholder = "จำนวนวันใน 1 ปี" })
                                        @*@Html.HiddenFor(model => model.ManagerName)*@
                                        @Html.ValidationMessageFor(m => m.DaysINYear, "", new { @class = "help-block help-block-error required" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group m-form__group row">
                                        <label class="control-label col-md-4 align-left" style="padding-left: 0px!important;">ปัดเศษดอกเบี้ยเงินกู้</label>
                                        @Html.TextBoxFor(m => m.RoundIntMethod, new { @class = "form-control form-control-inline input-small col-md-4 align-right color:blue", @placeholder = "ปัดเศษดอกเบี้ยเงินกู้" })
                                        @*@Html.HiddenFor(model => model.RoundIntMethod)*@
                                        @Html.ValidationMessageFor(m => m.RoundIntMethod, "", new { @class = "help-block help-block-error required" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group m-form__group row">
                                        <label class="control-label col-md-4 align-left" style="padding-left: 0px!important;">ใบเสร็จเล่มที่</label>
                                        @Html.TextBoxFor(m => m.LastReceiptBookNo, new { @class = "form-control form-control-inline input-small col-md-4 align-right color:blue", @placeholder = "ใบเสร็จเล่มที่" })
                                        @Html.ValidationMessageFor(m => m.LastReceiptBookNo, "", new { @class = "help-block help-block-error required" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group m-form__group row">
                                        <label class="control-label col-md-4 align-left" style="padding-left: 0px!important;">ใบเสร็จเลขที่</label>
                                        @Html.TextBoxFor(m => m.LastReceiptRunNo, new { @class = "form-control form-control-inline input-small col-md-4 align-right color:blue", @placeholder = "ใบเสร็จเลขที่" })
                                        @Html.ValidationMessageFor(m => m.LastReceiptRunNo, "", new { @class = "help-block help-block-error required" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group m-form__group row">
                                        <div class="col-md-6"></div>
                                        <div class="form-actions">
                                            <button type="button" class="btn m-btn--pill m-btn--air btn-outline-info m-btn m-btn--custom--save" id="btnSave">บันทึกข้อมูล <i class="fa"></i></button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    @Html.HiddenFor(model => model.CoopID)
    @Html.HiddenFor(model => model.Filestatus)
    @*@Html.HiddenFor(model => model.AccountNo)*@
}
@section StylesAndScript{

    <script src="~/styles/global/plugins/jquery-ui/jquery-ui.min.js"></script>
    <script src="~/styles/v50x/sweetalert2.all.js"></script>
    <script src="~/Scripts/jquery-3.2.1.min.js"></script>
    <script src="~/styles/global/plugins/jquery-validation/js/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
    <script src="~/Scripts/inputmask.min.js"></script>
    <script src="~/Scripts/jquery.inputmask.min.js"></script>
    <script src="~/Scripts/CoopWeb/CoopWeb.js"></script>

    <link href="~/styles/global/plugins/jquery-ui/jquery-ui.min.css" rel="stylesheet" />
    <link href="~/Content/jquery-ui.theme.css" rel="stylesheet" />

    @*<script src="~/Scripts/DataTables/media/js/jquery.dataTables.js"></script>*@
    @*<script src="~/Scripts/bootstrap-datepicker.js"></script>*@
    @*<link href="~/Content/jquery.dataTables.css" rel="stylesheet" />*@

}
@*CoopControl*@
@section scripts{
    <script type="text/javascript">
        $(document).ready(function () {
            /* Read Deposit*/
            //debugger
            $("#CoopID").keyup(function (e) {
                //debugger
                if (event.keyCode === 13) {
                    e.preventDefault();
                    //debugger
                    CoopIDChange(this.value);
                }
            });
            function CoopIDChange(copID) {
                //debugger
                //var copID = AcctNo;
                if (copID != undefined && copID != '' && copID != null) {
                    var aData = {
                        CoopID: $("#CoopID").val(),
                        CoopID: copID
                    };
                    //alert(aData);
                    //debugger
                    $.ajax({
                        url: '/CoopControl/TransferInCoopControl/',
                        type: 'POST',
                        contentType: "application/json; charset=utf-8",
                        dataType: 'json',
                        data: JSON.stringify(aData),
                        async: false,
                        cache: false,
                        beforeSend: function (x) {
                            if (x && x.overrideMimeType) {
                                x.overrideMimeType("application/json;charset=UTF-8");
                            }
                        },
                        success: function (data, status, xhr) {
                            if (status == 'success' && data != null && data[0] != null) {
                                if (data[0].Result && data[0].Message == 'Successful') {
                                    if (data[1] != null) {
                                        TransferInDepositType(data[1]);
                                    }
                                } else {
                                    //swal.fire("Warning", data[0].Message, "warning")
                                    Alert(data[0].Message)
                                    clearTextBox();
                                    return false;
                                }
                            } else {
                                //swal.fire("Warning", "Something wrong, please check", "error")
                                Alert("Something wrong, please check error")
                                clearTextBox();
                                result = false;
                            }
                        },
                        error: function (xhr, status, error) {
                            //swal.fire("Error occurred", error, "error")
                            Alert("Error occurred")
                            clearTextBox();
                            result = false;
                        }
                    });
                }
            }

            function TransferInDepositType(data) {
                if (data != null) {
                    //debugger
                    $("#Filestatus").val(data.Filestatus);
                    $("#CoopID").val(data.CoopID);
                    $("#CoopName").val(data.CoopName);
                    $("#ManagerName").val(data.ManagerName);
                    $("#Address").val(data.Address);
                    $("#Province").val(data.Province);
                    $("#PostalCode").val(data.PostalCode);
                    $("#Telephone").val(data.Telephone);
                    $("#Fax").val(data.Fax);
                    $("#PrevSystemDateTH").val(conversion.DateInBE(data.PrevSystemDate));
                    $("#SystemDateTH").val(conversion.DateInBE(data.SystemDate));
                    $("#NextSystemDateTH").val(conversion.DateInBE(data.NextSystemDate));
                    $("#BudgetYear").val(data.BudgetYear);
                    $("#StartBudgetDateTH").val(conversion.DateInBE(data.StartBudgetDate));
                    $("#EndBudgetDateTH").val(conversion.DateInBE(data.EndBudgetDate));
                    $("#PrevBudgetYear").val(data.PrevBudgetYear);
                    $("#PrevStartBudgetDateTH").val(conversion.DateInBE(data.PrevStartBudgetDate));
                    $("#PrevEndBudgetDateTH").val(conversion.DateInBE(data.PrevEndBudgetDate));
                    $("#ManagerName").val(data.ManagerName);
                    $("#AccountPeriod").val(data.AccountPeriod);
                    $("#DaysINYear").val(data.DaysINYear);
                    $("#RoundIntMethod").val(data.RoundIntMethod);
                    $("#LastReceiptBookNo").val(data.LastReceiptBookNo);
                    $("#LastReceiptRunNo").val(data.LastReceiptRunNo);
                }
            }

            function clearTextBox() {
                $("#Filestatus").val("");
                $("#CoopID").val("");
                $("#CoopName").val("");
                $("#ManagerName").val("");
                $("#Address").val("");
                $("#Province").val("");
                $("#PostalCode").val("");
                $("#Telephone").val("");
                $("#Fax").val("");
                $("#PrevSystemDateTH").val("");
                $("#SystemDateTH").val("");
                $("#NextSystemDateTH").val("");
                $("#BudgetYear").val("");
                $("#StartBudgetDateTH").val("");
                $("#EndBudgetDateTH").val("");
                $("#PrevBudgetYear").val("");
                $("#PrevStartBudgetDateTH").val("");
                $("#PrevEndBudgetDateTH").val("");
                $("#ManagerName").val("");
                $("#AccountPeriod").val("");
                $("#DaysINYear").val("");
                $("#RoundIntMethod").val("");
                $("#LastReceiptBookNo").val("");
                $("#LastReceiptRunNo").val("");
            }
            $("#PrevSystemDateTH").keyup(function (e) {
                //debugger
                if (event.keyCode === 13) {
                    e.preventDefault();
                    var strDate = this.value;
                    if (strDate != null) {
                        if (!validation.isValidDateTH(strDate)) {
                            alert("วันที่ทำการวันก่อนไม่ถูกต้อง โปรดตรวจสอบ");
                            this.focus();
                        }
                    }
                }
            })
            $("#SystemDateTH").keyup(function (e) {
                //debugger
                if (event.keyCode === 13) {
                    e.preventDefault();
                    var strDate = this.value;
                    if (strDate != null) {
                        if (!validation.isValidDateTH(strDate)) {
                            alert("วันที่ทำการไม่ถูกต้อง โปรดตรวจสอบ");
                            this.focus();
                        }
                    }
                }
            })
            $("#NextSystemDateTH").keyup(function (e) {
                //debugger
                if (event.keyCode === 13) {
                    e.preventDefault();
                    var strDate = this.value;
                    if (strDate != null) {
                        if (!validation.isValidDateTH(strDate)) {
                            alert("วันที่ทำการถัดไปไม่ถูกต้อง โปรดตรวจสอบ");
                            this.focus();
                        }
                    }
                }
            })
            $("#StartBudgetDateTH").keyup(function (e) {
                //debugger
                if (event.keyCode === 13) {
                    e.preventDefault();
                    var strDate = this.value;
                    if (strDate != null) {
                        if (!validation.isValidDateTH(strDate)) {
                            alert("วันที่เริ่มปีงบประมาณไม่ถูกต้อง โปรดตรวจสอบ");
                            this.focus();
                        }
                    }
                }
            })
            $("#EndBudgetDateTH").keyup(function (e) {
                //debugger
                if (event.keyCode === 13) {
                    e.preventDefault();
                    var strDate = this.value;
                    if (strDate != null) {
                        if (!validation.isValidDateTH(strDate)) {
                            alert("วันที่สิ้นสุดปีงบประมาณไม่ถูกต้อง โปรดตรวจสอบ");
                            this.focus();
                        }
                    }
                }
            })
            $("#PrevStartBudgetDateTH").keyup(function (e) {
                //debugger
                if (event.keyCode === 13) {
                    e.preventDefault();
                    var strDate = this.value;
                    if (strDate != null) {
                        if (!validation.isValidDateTH(strDate)) {
                            alert("วันที่เริ่มปีงบประมาณ (ปีที่แล้ว) ไม่ถูกต้อง โปรดตรวจสอบ");
                            this.focus();
                        }
                    }
                }
            })
            $("#PrevEndBudgetDateTH").keyup(function (e) {
                //debugger
                if (event.keyCode === 13) {
                    e.preventDefault();
                    var strDate = this.value;
                    if (strDate != null) {
                        if (!validation.isValidDateTH(strDate)) {
                            alert("วันที่สิ้นสุดปีงบประมาณ (ปีที่แล้ว) ไม่ถูกต้อง โปรดตรวจสอบ");
                            this.focus();
                        }
                    }
                }
            })
            $("#btnSave").click(function (e) {
                e.preventDefault();
                //debugger
                var copID = $("#CoopID").val();
                var copName = $("#CoopName").val();
                if ((copID == undefined || copID == '' || copID == null)) {
                    //swal.fire("โปรดบันทึก", "ประเภทเงินฝาก", "warning")
                    Alert("โปรดบันทึกประเภทเงินฝาก")
                    return false;
                }
                if ((copName == undefined || copName == '' || copName == null)) {
                    //swal.fire("โปรดบันทึก", "ชื่อประเภทเงินฝาก", "warning")
                    Alert("โปรดบันทึกชื่อประเภทเงินฝาก")
                    return false;
                }
                var prevSystemDate = $("#PrevSystemDateTH").val();
                if (!validation.isValidDateTH(prevSystemDate)) {
                    alert("วันที่ทำการวันก่อนไม่ถูกต้อง โปรดตรวจสอบ");
                    return false;
                }
                var systemDate = $("#SystemDateTH").val();
                if (!validation.isValidDateTH(systemDate)) {
                    alert("วันที่ทำการไม่ถูกต้อง โปรดตรวจสอบ");
                    return false;
                }
                var nextSystemDate = $("#EndSystemDateTH").val();
                if (!validation.isValidDateTH(nextSystemDate)) {
                    alert("วันที่ทำการวันถัดไปไม่ถูกต้อง โปรดตรวจสอบ");
                    return false;
                }
                var startBudgetDateTH = $("#StartBudgetDateTH").val();
                if (!validation.isValidDateTH(startBudgetDateTH)) {
                    alert("วันที่เริ่มปีงบประมาณไม่ถูกต้อง โปรดตรวจสอบ");
                    return false;
                }
                //debugger
                var endBudgetDateTH = $("#EndBudgetDateTH").val();
                if (!validation.isValidDateTH(endBudgetDateTH)) {
                    alert("วันที่สิ้นสุดปีงบประมาณไม่ถูกต้อง โปรดตรวจสอบ");
                    return false;
                }                var result = false;
                var prevStartBudgetDateTH = $("#PrevStartBudgetDateTH").val();
                if (!validation.isValidDateTH(prevStartBudgetDateTH)) {
                    alert("วันที่เริ่มปีงบประมาณ (ปีถัดไป) ไม่ถูกต้อง โปรดตรวจสอบ");
                    return false;
                }                   
                var prevEndBudgetDateTH = $("#PrevEndBudgetDateTH").val();
                if (!validation.isValidDateTH(prevEndBudgetDateTH)) {
                    alert("วันที่สิ้นสุดปีงบประมาณ (ปีถัดไป) ไม่ถูกต้อง โปรดตรวจสอบ");
                    return false;
                }   
                //debugger
                var aData = {
                    Filestatus: $("#Filestatus").val(),
                    CoopID: $("#CoopID").val(),
                    CoopName: $("#CoopName").val(),
                    ManagerName: $("#ManagerName").val(),
                    Address: $("#Address").val(),
                    Province: $("#Province").val(),
                    PostalCode: $("#PostalCode").val(),
                    Telephone: $("#Telephone").val(),
                    Fax: $("#Fax").val(),
                    PrevSystemDateTH: $("#PrevSystemDateTH").val(),
                    SystemDateTH: $("#SystemDateTH").val(),
                    NextSystemDateTH: $("#NextSystemDateTH").val(),
                    BudgetYear: $("#BudgetYear").val(),
                    StartBudgetDateTH: $("#StartBudgetDateTH").val(),
                    EndBudgetDateTH: $("#EndBudgetDateTH").val(),
                    PrevBudgetYear: $("#PrevBudgetYear").val(),
                    PrevStartBudgetDateTH: $("#PrevStartBudgetDateTH").val(),
                    PrevEndBudgetDateTH: $("#PrevEndBudgetDateTH").val(),
                    ManagerName: $("#ManagerName").val(),
                    AccountPeriod: $("#AccountPeriod").val(),
                    DaysINYear: $("#DaysINYear").val(),
                    RoundIntMethod: $("#RoundIntMethod").val(),
                    LastReceiptBookNo: $("#LastReceiptBookNo").val(),
                    LastReceiptRunNo: $("#LastReceiptRunNo").val()
                };
                //debugger
                $.ajax({
                    url: '/CoopControl/TransferOutCoopControl/',
                    type: 'POST',
                    contentType: "application/json; charset=utf-8",
                    dataType: 'json',
                    data: JSON.stringify(aData),
                    async: false,
                    cache: false,
                    beforeSend: function (x) {
                        if (x && x.overrideMimeType) {
                            x.overrideMimeType('application/json;charset=UTF-8');
                        }
                    },
                    success: function (data, status, xhr) {
                        if (status == 'success' && data != null && data[0] != null) {
                            if (data[0].Result && data[0].Message == 'Successful') {
                                if (data[1] != null) {
                                    $("#CoopID").val(data[1].CoopID);
                                    //swal.fire("ข้อมูลบัญชีเงินฝาก", "บันทึกข้อมูลสำเร็จแล้ว", "success");
                                    Alter("บันทึกข้อมูลสำเร็จแล้ว");
                                    result = true;
                                }
                            }
                            else {
                                //swal.fire("Warning", data[0].Message, "warning");
                                Alter(data[0].Message);
                                result = false;
                            }
                        } else {
                            //swal.fire("Warning", "ข้อมูลผิดพลาด บันทีกข้อมูลไม่สำเร็จ", "error");
                            Alter("ข้อมูลผิดพลาด บันทีกข้อมูลไม่สำเร็จ");
                            result = false;
                        }
                    },
                    error: function (xhr, status, error) {
                        //swal.fire("มีข้อมูลผิดพลาด (ก่อนส่งปรับปรุงข้อมูล)", error, "error");
                        Alter("มีข้อมูลผิดพลาด (ก่อนส่งปรับปรุงข้อมูล)");
                        result = false;
                    }
                });
            });
        });
    </script>
}
