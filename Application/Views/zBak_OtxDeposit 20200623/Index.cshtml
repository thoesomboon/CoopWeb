@{
    ViewBag.Title = @Text.ProgramName + "ฝาก / ถอนบัญชีเงินฝาก";
    Layout = "~/Views/Shared/_Layout50x.cshtml";
}
@model Coop.Models.POCO.OtxDepositModel
@*@using Coop.Infrastructure.Helpers*@

<style>
    .m-portlet--head-sm.m-portlet .m-portlet__foot, .m-portlet--head-sm.m-portlet .m-portlet__body {
        padding-top: 0.5rem;
    }

    .m-portlet--head-sm.m-portlet .m-portlet__head {
        height: 3rem;
    }

    .form-horizontal {
        width: 100%;
    }

    .form-control {
        padding: 0px 5px;
    }

    .form-control {
        display: block;
        width: 100%;
        height: calc(2.0rem + 5px); /*customize for page layout*/
        padding: .85rem 1.15rem;
        line-height: 1.25;
        font-size: 1rem;
        color: #495057;
        background-color: #fff;
        background-clip: padding-box;
        border: 1px solid #ced4da;
        border-radius: .25rem;
        -webkit-transition: border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;
        transition: border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;
        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;
    }

    [readonly].form-control {
        background-color: transparent;
        color: blue;
    }

    .btn.m-btn--custom {
        /*padding: 5px 5px 5px 5px !important;
        font-size: 1rem;
        font-weight: 200;*/
        font-family: Poppins,"Open Sans", sans-serif;
    }

    .btn.m-btn--custom--submit {
        padding: 5px 5px 5px 15px !important;
        font-size: 1rem;
        font-weight: 200;
        font-family: Poppins,"Open Sans", sans-serif;
    }

    .custom-select {
        display: inline-block;
        width: 100%;
        height: calc(2.0rem + 5px); /*customize for page layout*/
        /*height: calc(2.95rem + 2px);*/
        padding: .375rem 1.75rem .375rem .75rem;
        line-height: 1.25;
        color: #495057;
        vertical-align: middle;
        background: #fff url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 5'%3E%3Cpath fill='%23343a40' d='M2 0L0 2h4zm0 5L0 3h4z'/%3E%3C/svg%3E") no-repeat right .75rem center;
        background-size: 8px 10px;
        border: 1px solid #ced4da;
        border-radius: .25rem;
        -webkit-appearance: none;
        -moz-appearance: none;
        /*appearance: none;*/
    }

    .m-subheader {
        padding: 5px 5px 5px 5px;
    }

        .m-subheader .m-subheader__title {
            display: inline-block;
            padding: 5px 10px;
            /*padding-left:;*/
            font-family: Roboto;
            font-weight: 300;
            font-size: 1.55rem;
            font-weight: 500;
            vertical-align: middle;
            margin: 0 15px 0px 0;
            color: #3f4047;
        }

    .d-flex {
        display: -webkit-box !important;
        display: -ms-flexbox !important;
        display: flex !important;
        height: 30px;
    }

    .btn-lg.m-btn--icon-only.m-btn--icon, .btn-group-lg > .btn.m-btn--icon-only.m-btn--icon {
        width: 43px;
        height: 30px;
    }

    .m-body .m-content {
        padding: 5px 5px;
    }

    .custom-select {
        font-family: Poppins,"Open Sans", sans-serif;
    }

    .input-group-sm > .input-group-btn > select.btn, .input-group-sm > select.form-control, .input-group-sm > select.input-group-addon, select.input-sm {
        height: 30px;
    }

    .form-control {
        padding: 5px 5px;
    }

    .form-horizontal .control-label {
        text-align: right;
        margin-bottom: 0px;
        padding-top: 7px;
        font-family: Poppins,"Open Sans", sans-serif;
    }

    .align-right {
        text-align: right;
    }

    .btn-sm, .btn-group-sm > .btn {
        padding: .45rem .8rem;
        font-size: 0.87rem;
        line-height: 0.5;
        border-radius: .2rem;
    }

    .m-btn--custom.btn {
        padding: .75rem 2rem;
        font-size: 1rem;
        font-weight: 200;
        font-family: Poppins,"Open Sans", sans-serif;
    }

    dt, kbd kbd, label {
        font-weight: 400;
    }
</style>

@using (Html.BeginForm("Index", "Deposit", FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.AntiForgeryToken()
    <div class="m-grid__item m-grid__item--fluid m-wrapmem">
        <!-- BEGIN: Subheader -->
        <div class="m-subheader ">
            <div class="d-flex align-items-center">
                <div class="mr-auto">
                    <h3 class="m-subheader__title m-subheader__title--separator"></h3>
                    <ul class="m-subheader__breadcrumbs m-nav m-nav--inline">
                        <li class="m-nav__item m-nav__item--home">
                            <a href="#" class="m-nav__link m-nav__link--icon">
                                <i class="m-nav__link-icon la la-home"></i>
                            </a>
                        </li>
                        <li class="m-nav__item">
                            <a href="#" class="m-nav__link">
                                <span class="m-nav__link-text">@Text.ProgramName</span>
                            </a>
                        </li>
                        <li class="m-nav__separator">></li>
                        <li class="m-nav__item">
                            <a href="#" class="m-nav__link">
                                <span class="m-nav__link-text">Loan</span>
                            </a>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
        <!-- END: Subheader -->
        <div class="m-content">
            <div class="m-content">
                <div class="m-portlet m-portlet--head-sm" m-portlet="true" id="m_portlet_tools_3">
                    <div class="m-portlet__head">
                        <div class="m-portlet__head-caption">
                            <div class="m-portlet__head-title">
                                <span class="m-portlet__head-icon">
                                    <i class="flaticon-interface-10"></i>
                                    <i class="icon-equalizer font-red-sunglo"></i>
                                </span>
                                <div class="caption">
                                    <h3 class="m-portlet__head-text m--font-transform-u m--font-success">
                                        บัญชีเงินฝาก
                                        <small class="m--font-metal m--font-transform-">Information...</small>
                                    </h3>
                                </div>
                            </div>
                        </div>
                        <div class="m-portlet__head-tools">
                            <ul class="m-portlet__nav"></ul>
                        </div>
                    </div>
                    <div class="m-portlet__body">
                        <div class="table-toolbar">
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group m-form__group row">
                                        <label class="control-label col-md-4 align-left" style="padding-left: 0px!important;">เลขที่ยัญชี</label>
                                        @Html.TextBoxFor(m => m.AccountNo, new { @class = "form-control form-control-inline input-small col-md-4", @placeholder = "เลขที่ยัญชีเงินฝาก" })
                                        @*@Html.HiddenFor(model => model.AccountNo)*@
                                        @*@Html.ValidationMessageFor(m => m.AccountNo, "", new { @class = "help-block help-block-error required" })*@
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group m-form__group row">
                                        <label class="control-label col-md-4 align-left" style="padding-left: 0px!important;">ชื่อบัญชี</label>
                                        @Html.TextBoxFor(m => m.AccountName, new { @class = "form-control form-control-inline input-small col-md-8", @placeholder = "ชื่อบัญชี" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group m-form__group row">
                                        <label class="control-label col-md-4 align-left" style="padding-left: 0px!important;">ประเภทบัญชี</label>
                                        @Html.DropDownListFor(m => m.DepositTypeName, ViewBag.DepositTypeList as SelectList, "-- ประเภทบัญชี --", new { @class = "form-control form-control-inline input-small col-md-6" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group m-form__group row">
                                        <label class="control-label col-md-4 align-left" style="padding-left: 0px!important;">ยอดคงเหลือ</label>
                                        @Html.TextBoxFor(m => m.LedgerBal, new { @class = "form-control form-control-inline input-small col-md-4 align-right", @placeholder = "ยอดคงเหลือ" })
                                        @*@Html.HiddenFor(model => model.LedgerBal)*@
                                        @*@Html.ValidationMessageFor(m => m.LedgerBal, "", new { @class = "help-block help-block-error required" })*@
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group m-form__group row">
                                        <label class="control-label col-md-4 align-left" style="padding-left: 0px!important;">ยอดที่ถอนได้</label>
                                        @Html.TextBoxFor(m => m.AvailBal, new { @class = "form-control form-control-inline input-small col-md-4 align-right", @placeholder = "ยอดเงินที่ถอนได้" })
                                        @*@Html.HiddenFor(model => model.AvailBal)*@
                                        @*@Html.ValidationMessageFor(m => m.AvailBal, "", new { @class = "help-block help-block-error required" })*@
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group m-form__group row">
                                        <label class="control-label col-md-4 align-left" style="padding-left: 0px!important;">วันที่เปิดบัญชี</label>
                                        @Html.TextBoxFor(m => m.OpenDateTH, new { @class = "form-control form-control-inline input-small col-md-4 align-center color:blue", @placeholder = "วันที่เปิดบัญชี" })
                                        @*<input class="input-medium" type="text" data-provide="datepicker" data-date-language="th" id="OpenDateTH" name="OpenDateTH" placeholder="วันที่เปิดบัญชี (พ.ศ. 4 หลัก)">*@
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group m-form__group row">
                                        <label class="control-label col-md-4 align-left" style="padding-left: 0px!important;">ดอกเบี้ยสะสม</label>
                                        @Html.TextBoxFor(m => m.AccInt, new { @class = "form-control form-control-inline input-small col-md-4 align-right", @placeholder = "ดอกเบี้ยสะสม" })
                                        @*@Html.HiddenFor(model => model.AccInt)*@
                                        @*@Html.ValidationMessageFor(m => m.AccInt, "", new { @class = "help-block help-block-error" })*@
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group m-form__group row">
                                        <label class="control-label col-md-4 align-left" style="padding-left: 0px!important;">รหัสดอกเบี้ย</label>
                                        @Html.TextBoxFor(m => m.IntType, new { @class = "form-control form-control-inline input-small col-md-2 align-left", @placeholder = "รหัสดอกเบี้ย" })
                                        @*@Html.HiddenFor(model => model.IntType)*@
                                        @*@Html.ValidationMessageFor(m => m.IntType, "", new { @class = "help-block help-block-error" })*@
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group m-form__group row">
                                        <label class="control-label col-md-4 align-left" style="padding-left: 0px!important;">คำนวณดบ.สุดท้าย</label>
                                        @Html.TextBoxFor(m => m.LastCalcIntTH, new { @class = "form-control form-control-inline input-small col-md-4 align-center color:blue", @placeholder = "วันที่คำนวณดบ.สุดท้าย" })
                                        @*<input class="input-medium" type="text" data-provide="datepicker" data-date-language="th" id="LastCalcIntTH" name="LastCalcIntTH" placeholder="คำนวณดบ.สุดท้าย (พ.ศ. 4 หลัก)">*@
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group m-form__group row">
                                        <label class="control-label col-md-4 align-left" style="padding-left: 0px!important;">ถอนเงินเดือนนี้ (บาท)</label>
                                        @Html.TextBoxFor(m => m.MonthWithdrawAmt, new { @class = "form-control form-control-inline input-small col-md-4 align-right color:blue", @placeholder = "ถอนเงินเดือนนี้ (บาท)" })
                                        @*@Html.HiddenFor(model => model.MonthWithdrawAmt)*@
                                        @*@Html.ValidationMessageFor(m => m.MonthWithdrawAmt, "", new { @class = "help-block help-block-error required" })*@
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group m-form__group row">
                                        <label class="control-label col-md-4 align-left" style="padding-left: 0px!important;">ถอนเงินเดือนนี้ (ครั้ง)</label>
                                        @Html.TextBoxFor(m => m.MonthWithdrawTimes, new { @class = "form-control form-control-inline input-small col-md-4 align-right color:blue", @placeholder = "ถอนเงินเดือนนี้ (ครั้ง)" })
                                        @*@Html.HiddenFor(model => model.MonthWithdrawTimes)*@
                                        @*@Html.ValidationMessageFor(m => m.MonthWithdrawTimes, "", new { @class = "help-block help-block-error" })*@
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group m-form__group row">
                                        <label class="control-label col-md-4 align-left" style="padding-left: 0px!important;">วันที่ติดต่อครั้งสุดท้าย</label>
                                        @Html.TextBoxFor(m => m.LastContactTH, new { @class = "form-control form-control-inline input-small col-md-4 align-center color:blue", @placeholder = "วันที่ติดต่อครั้งสุดท้าย" })
                                        @*<input class="input-medium" type="text" data-provide="datepicker" data-date-language="th" id="LastContactTH" name="LastContactTH" placeholder="ติดต่อครั้งสุดท้าย (พ.ศ. 4 หลัก)">*@
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group m-form__group row">
                                        <label class="control-label col-md-4 align-left" style="padding-left: 0px!important;">เลขที่สมุด</label>
                                        @Html.TextBoxFor(m => m.BookNo, new { @class = "form-control form-control-inline input-small col-md-4 align-left color:blue", @placeholder = "เลขที่สมุด" })
                                        @*@Html.HiddenFor(model => model.BookNo)*@
                                        @*@Html.ValidationMessageFor(m => m.BookNo, "", new { @class = "help-block help-block-error" })*@
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group m-form__group row">
                                        <label class="control-label col-md-4 align-left" style="padding-left: 0px!important;">บรรทัดสุดท้าย (สมุด)</label>
                                        @Html.TextBoxFor(m => m.LastBookLine, new { @class = "form-control form-control-inline input-small col-md-4 align-right", @placeholder = "บรรทัดสุดท้าย (สมุด)" })
                                        @*@Html.HiddenFor(model => model.LastBookLine)*@
                                        @*@Html.ValidationMessageFor(m => m.LastBookLine, "", new { @class = "help-block help-block-error" })*@
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group m-form__group row">
                                        <label class="control-label col-md-4 align-left" style="padding-left: 0px!important;">เงินอายัด</label>
                                        @Html.TextBoxFor(m => m.HoldAmt, new { @class = "form-control form-control-inline input-small col-md-4 align-right", @placeholder = "เงินอายัด" })
                                        @*@Html.HiddenFor(model => model.HoldAmt)*@
                                        @*@Html.ValidationMessageFor(m => m.HoldAmt, "", new { @class = "help-block help-block-error required" })*@
                                    </div>
                                </div>
                            </div>
                            @*-- Transaction detail --*@
                            <div class="row">
                                <div class="col-md-8">
                                    <div class="form-group m-form__group row">
                                        <label class="control-label col-md-2 align-left" style="padding-left: 0px!important;">รหัสรายการ</label>
                                        @Html.TextBoxFor(m => m.TtlfDeposit.TTxnCode, new { @class = "form-control form-control-inline input-small col-md-2 align-left", @placeholder = "รหัสรายการ" })
                                        @Html.DropDownListFor(m => m.TxnCode.Descript, ViewBag.TxnCodeList as SelectList, "-- รหัสรายการ --", new { @class = "form-control form-control-inline input-small col-md-6" })
                                    </div>
                                    <div class="col-md-4">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group m-form__group row">
                                        <label class="control-label col-md-4 align-left" style="padding-left: 0px!important;">วันที่ทำรายการ</label>
                                        @*<input class="input-medium" type="text" data-provide="datepicker" data-date-language="th" id="TxnDateTH" name="TxnDateTH" placeholder="วันที่ทำรายการ (พ.ศ. 4 หลัก)">*@
                                        @Html.TextBoxFor(m => m.TtlfDeposit.TxnDateTH, new { @class = "form-control form-control-inline input-small col-md-4 align-right", @type = "Text", @placeholder = "วันที่ทำรายการ" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group m-form__group row">
                                        <label class="control-label col-md-4 align-left" style="padding-left: 0px!important;">วันที่ย้อนหลัง</label>
                                        @*<input class="input-medium" type="text" data-provide="datepicker" data-date-language="th" id="BackDateTH" name="BackDateTH" placeholder="วันที่ย้อนหลัง (พ.ศ. 4 หลัก)">*@
                                        @Html.TextBoxFor(m => m.TtlfDeposit.BackDateTH, new { @class = "form-control form-control-inline input-small col-md-4 align-right", @type = "Text", @placeholder = "วันที่ย้อนหลัง" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group m-form__group row">
                                        <label class="control-label col-md-4 align-left" style="padding-left: 0px!important;">CD Code</label>
                                        @Html.TextBoxFor(m => m.TxnCode.CDCode, new { @class = "form-control form-control-inline input-small col-md-4 align-right", @type = "Text", @placeholder = "CD Code" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group m-form__group row">
                                        <label class="control-label col-md-4 align-left" style="padding-left: 0px!important;">จำนวนเงิน</label>
                                        @Html.TextBoxFor(m => m.Amt, new { @class = "form-control form-control-inline input-small col-md-4 align-right", @placeholder = "เงินฝาก / ถอน" })
                                        @*@Html.HiddenFor(model => model.Amt)*@
                                        @*@Html.ValidationMessageFor(m => m.Amt, "", new { @class = "help-block help-block-error required" })*@
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group m-form__group row">
                                        <label class="control-label col-md-4 align-left" style="padding-left: 0px!important;">เงินคงเหลือ (ใหม่)</label>
                                        @Html.TextBoxFor(m => m.TtlfDeposit.CFLedgerBal, new { @class = "form-control form-control-inline input-small col-md-4 align-right", @placeholder = "เงินคงเหลือ (ใหม่)" })
                                        @*@Html.HiddenFor(model => model.TtlfDeposit.CFLedgerBal)*@
                                        @*@Html.ValidationMessageFor(m => m.TtlfDeposit.CFLedgerBal, "", new { @class = "help-block help-block-error" })*@
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group m-form__group row">
                                        <label class="control-label col-md-4 align-left" style="padding-left: 0px!important;">OCFlag</label>
                                        @Html.TextBoxFor(m => m.TxnCode.OCFlag, new { @class = "form-control form-control-inline input-small col-md-4 align-right", @type = "Text", @placeholder = "OCFlag" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group m-form__group row">
                                        <label class="control-label col-md-4 align-left" style="padding-left: 0px!important;">ดอกเบี้ย</label>
                                        @Html.TextBoxFor(m => m.IntAmt, new { @class = "form-control form-control-inline input-small col-md-4 align-right", @placeholder = "เงินฝากรายเดือน" })
                                        @*@Html.ValidationMessageFor(m => m.IntAmt, "", new { @class = "help-block help-block-error" })*@
                                    </div>
                                </div>
                                <div class="col-md-4">
                                </div>
                                <div class="col-md-4">
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group m-form__group row">
                                        <label class="control-label col-md-4 align-left" style="padding-left: 0px!important;">ค่าปรับ</label>
                                        @Html.TextBoxFor(m => m.TtlfDeposit.ChargeAmt, new { @class = "form-control form-control-inline input-small col-md-4 align-right", @placeholder = "ค่าปรับ" })
                                        @*@Html.ValidationMessageFor(m => m.TtlfDeposit.ChargeAmt, "", new { @class = "help-block help-block-error" })*@
                                    </div>
                                </div>
                                <div class="form-group m-form__group row">
                                    <label class="control-label col-md-4 align-left" style="padding-left: 0px!important;">ค่าปรับต่ำสุด-สูงสุด (Max)</label>
                                    @Html.TextBoxFor(m => m.DepositType.MinChargeAmt, new { @class = "form-control form-control-inline input-small col-md-2 align-right", @placeholder = "ค่าปรับต่ำสุด (Min)" })
                                    @Html.TextBoxFor(m => m.DepositType.MaxChargeAmt, new { @class = "form-control form-control-inline input-small col-md-2 align-right", @placeholder = "ค่าปรับสูงสุด (Max)" })
                                    @*@Html.ValidationMessageFor(m => m.NetAmt, "", new { @class = "help-block help-block-error" })*@
                                </div>
                                <div class="form-group m-form__group row">
                                    <label class="control-label col-md-4 align-left" style="padding-left: 0px!important;">ค่าปรับต่ำสุด (Min)</label>
                                    @Html.TextBoxFor(m => m.DepositType.WithdrawChargePercent, new { @class = "form-control form-control-inline input-small col-md-4 align-right", @placeholder = "ค่าปรับ (%)" })
                                    @*@Html.ValidationMessageFor(m => m.NetAmt, "", new { @class = "help-block help-block-error" })*@
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group m-form__group row">
                                        <label class="control-label col-md-4 align-left" style="padding-left: 0px!important;">เงินสุทธิ</label>
                                        @Html.TextBoxFor(m => m.NetAmt, new { @class = "form-control form-control-inline input-small col-md-4 align-right", @placeholder = "เงินสุทธิ" })
                                    </div>
                                </div>
                                <div class="form-group m-form__group row">
                                    <label class="control-label col-md-4 align-left" style="padding-left: 0px!important;">จำนวนครั้งถอนเดือนนี้</label>
                                    @Html.TextBoxFor(m => m.DepositType.MonthMaxWithdrawTimes, new { @class = "form-control form-control-inline input-small col-md-4 align-right", @placeholder = "จำนวนครั้งถอนเดือนนี้", onkeydown = "return ValidateNumber(event);" })
                                    @*@Html.TextBoxFor(m => m.DepositType.MonthMaxWithdrawAmt, new { @class = "form-control form-control-inline input-small col-md-4 align-right", @placeholder = "จำนวนเงินถอนเดือนนี้", onkeydown = "return ValidateNumber(event);" })*@
                                </div>
                                <div class="form-group m-form__group row">
                                    <label class="control-label col-md-4 align-left" style="padding-left: 0px!important;">จำนวนเงินถอนเดือนนี้</label>
                                    @*@Html.TextBoxFor(m => m.DepositType.MonthMaxWithdrawTimes, new { @class = "form-control form-control-inline input-small col-md-4 align-right", @placeholder = "จำนวนครั้งถอนเดือนนี้", onkeydown = "return ValidateNumber(event);" })*@
                                    @Html.TextBoxFor(m => m.DepositType.MonthMaxWithdrawAmt, new { @class = "form-control form-control-inline input-small col-md-4 align-right", @placeholder = "จำนวนเงินถอนเดือนนี้", onkeydown = "return ValidateNumber(event);" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group m-form__group row">
                                        <div class="col-md-6"></div>
                                        <div class="form-actions">
                                            <button type="button" class="btn m-btn--pill m-btn--air btn-outline-info m-btn m-btn--custom--save" id="btnSave">บันทึกข้อมูล <i class="fa"></i></button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @Html.HiddenFor(m => m.LastCalcInt)

    @Html.HiddenFor(m => m.DepositType.CalcIntType)
    @Html.HiddenFor(m => m.DepositType.CalcIntRate)
    @Html.HiddenFor(m => m.DepositType.MinLedgerBal)
    @Html.HiddenFor(m => m.DepositType.MinDepAmt)
    @Html.HiddenFor(m => m.DepositType.MaxDepAmt)
    @Html.HiddenFor(m => m.DepositType.MinWithdrawAmt)
    @Html.HiddenFor(m => m.DepositType.MaxWithdrawAmt)
    @Html.HiddenFor(m => m.DepositType.MinLedgerBal)
    @Html.HiddenFor(m => m.DepositType.MaxWithdrawAmt)

    @Html.HiddenFor(m => m.TxnCode.OCFlag)
}

@section StylesAndScript{
    @*<script src="~/styles/v50x/sweetalert2.js"></script>*@
    <script src="~/styles/global/plugins/jquery-ui/jquery-ui.min.js"></script>
    <script src="~/styles/global/plugins/jquery-validation/js/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
    <script src="~/Scripts/jquery-1.11.1.js"></script>
    <script src="~/Scripts/CoopWeb/CoopWeb.js"></script>

    @*<script src="~/Scripts/jquery-1.10.2.js"></script>*@
    @*<script src="~/bootstrap/js/bootstrap.min.js"></script>*@
    @*<script src="~/Scripts/jquery.dataTables.min.js"></script>*@

    @*<script src="~/Scripts/inputmask.min.js"></script>*@
    @*<script src="~/Scripts/jquery.MaskedInput.js"></script>*@
    @*<script src="~/Scripts/bootstrap-datepicker.js"></script>*@

    <link href="~/Content/Site.css" rel="stylesheet" />
    @*<link href="~/bootstrap/css/bootstrap.min.css" rel="stylesheet" />*@
    @*<link href="~/Content/jquery.dataTables.min.css" rel="stylesheet" />*@
}

@section scripts{
    <script type="text/javascript">
    $(document).ready(function () {
        /* Read Deposit*/
        //debugger
        if ($("#AccountNo").val("") == "") {
            $("#AccountNo").focus();
        }

        $("#AccountNo").keyup(function (e) {
            //debugger
            if (event.keyCode === 13) {
                e.preventDefault();
                //debugger
                ClearDeposit();
                AccountNoChange(this.value);
                //debugger
                $("#TTxnCode").focus;
            }
        });

        function AccountNoChange(accNo) {
            // Suwan comment out 2020-6-6
            //if (!validation.isValidAccountNo(accNo)) { // if not number --> return
            //    ClearDeposit();
            //    return;
            //}
            //debugger
            $.post('@Url.Action("TransferInOtxDeposit",  "OtxDeposit")', { accNo }, function (data) {
               //debugger
               if (data != null) {
                   //debugger
                   TransferInDeposit(data[1]);
                   //ReadDepositType();
                   //ReadCoop();

                } else {
                    alert("ข้อมูล (" + accNo + ") ไม่มีในระบบ หรืออาจถูกลบแล้ว");
                }
            });
        }

        function TransferInDeposit(data) {
            $("#AccountName").val(data.AccountName);
            $("#DepositTypeName").val(data.DepositTypeID);

            $("#LedgerBal").val(addCommas(data.LedgerBal));
            $("#AvailBal").val(addCommas(data.AvailBal));
            $("#OpenDateTH").val("");
            if (data.OpenDate != null) {
                var parsedDate = new Date(parseInt(data.OpenDate.substr(6)));
                var jsDate = new Date(parsedDate);
                var d = jsDate.getDate() + '/' + Number(jsDate.getMonth() + 1) + '/' + Number(jsDate.getFullYear() + 543);
                $("#OpenDateTH").val(d);
            }
            else {
                $("#OpenDateTH").val("");
            }

            $("#AccInt").val(addCommas(data.AccInt));
            $("#IntType").val(data.IntType);
            $("#LastCalcIntTH").val("");
            if (data.LastCalcInt != null) {
                var parsedDate = new Date(parseInt(data.LastCalcInt.substr(6)));
                var jsDate = new Date(parsedDate);
                var d = jsDate.getDate() + '/' + Number(jsDate.getMonth() + 1) + '/' + Number(jsDate.getFullYear() + 543);
                $("#LastCalcIntTH").val(d);
            }
            else {
                $("#LastCalcIntTH").val("");
            }

            $("#MonthWithdrawAmt").val(addCommas(data.MonthWithdrawAmt));
            $("#MonthWithdrawTimes").val(addCommas(data.MonthWithdrawTimes));
            $("#LastContactTH").val("");
            if (data.LastContact != null) {
                var parsedDate = new Date(parseInt(data.LastContact.substr(6)));
                var jsDate = new Date(parsedDate);
                var d = jsDate.getDate() + '/' + Number(jsDate.getMonth() + 1) + '/' + Number(jsDate.getFullYear() + 543);
                $("#LastContactTH").val(d);
            }
            else {
                $("#LastContactTH").val("");
            }

            $("#BookNo").val(data.BookNo);
            $("#LastBookLine").val(data.LastBookLine);
            $("#HoldAmt").val(addCommas(data.HoldAmt));
            debugger
            $("#IntAmt").val(addCommas(data.AccInt + data.IntAmt));

            var maskedSystemDate = conversion.toMaskDate(data.TxnDate);
            $("#TtlfDeposit_TxnDateTH").val(maskedSystemDate);
            $("#TtlfDeposit_BackDateTH").val(maskedSystemDate);
            // DepositType 
            $("#DepositType_MonthMaxWithdrawAmt").val(data.MonthMaxWithdrawAmt);
            $("#DepositType_MonthMaxWithdrawTimes").val(data.MonthMaxWithdrawTimes);
            $("#DepositType_MinChargeAmt").val(data.MinChargeAmt);
            $("#DepositType_MaxChargeAmt").val(data.MaxChargeAmt);
            $("#DepositType_WithdrawChargePercent").val(data.WithdrawChargePercent);

            $("#DepositType_CalcIntType").val(data.CalcIntType);
            $("#DepositType_CalcIntRate").val(data.CalcIntRate);

            $("#DepositType_MinDepAmt").val(data.MinDepAmt);
            $("#DepositType_MaxDepAmt").val(data.MaxDepAmt);
            $("#DepositType_MinWithdrawAmt").val(data.MinWithdrawAmt);
            $("#DepositType_MaxWithdrawAmt").val(data.MaxWithdrawAmt);
            $("#DepositType_MinLedgerBal").val(data.MinLedgerBal);
        }

        function ClearDeposit() {
            //$("#AccountNo").val("");
            $("#AccountName").val("");
            $("#DepositTypeName").val("");
            $("#LedgerBal").val("");
            $("#AvailBal").val("");
            $("#OpenDateTH").val("");
            $("#AccInt").val("");
            $("#IntType").val("");
            $("#LastCalcIntTH").val("");
            $("#MonthWithdrawAmt").val("");
            $("#MonthWithdrawTimes").val("");
            $("#LastContactTH").val("");
            $("#BookNo").val("");
            $("#LastBookLine").val("");
            $("#HoldAmt").val("");
            $("#TTxnCode").val("");
            $("#Descript").val("");
            $("#TxnDate").val("");
            $("#BackDate").val("");
            $("#Amt").val("");
            $("#CFLedgerBal").val("");
            $("#IntAmt").val("");
            $("#ChargeAmt").val("");
            $("#NetAmt").val("");

            $("#DepositType_MonthMaxWithdrawAmt").val("");
            $("#DepositType_MonthMaxWithdrawTimes").val("");
            $("#DepositType_MinChargeAmt").val("");
            $("#DepositType_MaxChargeAmt").val("");
            $("#DepositType_WithdrawChargePercent").val("");

            $("#DepositType_CalcIntType").val("");
            $("#DepositType_CalcIntRate").val("");

            $("#DepositType_MinDepAmt").val("");
            $("#DepositType_MaxDepAmt").val("");
            $("#DepositType_MinWithdrawAmt").val("");
            $("#DepositType_MaxWithdrawAmt").val("");
            $("#DepositType_MinLedgerBal").val("");

            $("#TtlfDeposit_TxnDateTH").val("");
            $("#TtlfDeposit_BackDateTH").val("");
        }

        $("#TtlfDeposit_TTxnCode").keyup(function (e) {
            //debugger
            if (event.keyCode === 13) {
                e.preventDefault();
                //debugger
                TxnCodeChange(this.value);
                //OtxDepositCalcInt(string AccNo, string BackDate)
            }
        });

        function TxnCodeChange(tCode) {
            $.post('@Url.Action("TransferInTxnCodeDEP", "TxnCode")', { tCode }, function (txndata) {
                //debugger
                if (txndata != null) {
                    //debugger
                    //alert("รหัสรายการ ( " + txndata[1].TTXnCode + " " + txndata[1].Descript + ")");
                    TransferInTxnCode(txndata[1]);
                } else {
                    alert("ไม่พบข้อมูลรหัสรายการ ( " + tCode + " )");
                }
            });
        }

        function TransferInTxnCode(data) {
            debugger
            $("#TxnCode_Descript").val(data.TTxnCode);
            $("#TxnCode_CDCode").val(data.CDCode);
            $("#TxnCode_OCFlag").val(data.OCFlag);
            var HoldAmt = $("#HoldAmt").val() * 1;
            var LedgerBal = $("#HoldAmt").val() * 1;
            var AvailBal = $("#AvailBal").val() * 1;

            if (data.CDCode == "D" && data.OCFlag == "C") {
                if ((HoldAmt != null) || (LedgerBal != AvailBal)) {
                    swal("ไม่สามารถปิดบัญชีได้ เพราะมียอดเงินอายัด หรือมีเช็คเคลียริ่งค้าง โปรดตรวจสอบ!", error, "error")
                    //$("#btnSave").prop("disabled", false);
                }
            };
        }

        $("#Amt").keyup(function (e) {
            debugger
            if (event.keyCode === 13) {
                e.preventDefault();
                debugger
                if (ValaidTxn(this.value)) {
                    CalcTxnAmt(this.value);
                }
                debugger
                //$("#TTxnCode").focus;
            }
        });
        $("#DepositType_MonthMaxWithdrawAmt").val(data.MonthMaxWithdrawAmt);
        $("#DepositType_MonthMaxWithdrawTimes").val(data.MonthMaxWithdrawTimes);
        $("#DepositType_MinChargeAmt").val(data.MinChargeAmt);
        $("#DepositType_MaxChargeAmt").val(data.MaxChargeAmt);
        $("#DepositType_WithdrawChargePercent").val(data.WithdrawChargePercent);

        $("#DepositType_CalcIntType").val(data.CalcIntType);
        $("#DepositType_CalcIntRate").val(data.CalcIntRate);

        $("#DepositType_MinLedgerBal").val(data.MinLedgerBal);
        function ValaidTxn(txnAmt) {
            ValaidTxnAmt = true;
            debugger
            var CDCode = $("#TxnCode_CDCode").val();

            var CDCode = $("#TxnCode_CDCode").val();
            var OCFlag = $("#TxnCode_OCFlag").val();

            var HoldAmt = parseFloat($("#HoldAmt").val().replace(",", ""));
            var LedgerBal = parseFloat($("#LedgerBal").val().replace(",", ""));
            var AvailBal = parseFloat($("#AvailBal").val().replace(",", ""));

            var MinDepAmt = $("#DepositType_MinDepAmt").val();
            var MaxDepAmt = $("#DepositType_MaxDepAmt").val();
            var MinWithdrawAmt = $("#DepositType_MinWithdrawAmt").val();
            var MaxWithdrawAmt = $("#DepositType_MaxWithdrawAmt").val();
            var MinLedgerBal = $("#DepositType_MinLedgerBal").val();

            var msg = "";

            if ($("#AccountNo").val() = null || validation.isValidAccountNo)
            if (CDCode == "C") {
                if (txnAmt < MinDepAmt) {
                    msg += "จำนวนเงินฝาก ( " + addCommas(txnAmt) + " ) น้อยกว่า ฝากขั้นต่ำที่กำหนด ( " + addCommas(MinDepAmt) + " ) \n";
                    ValaidTxnAmt = false;
                }
                if (txnAmt > MaxDepAmt) {
                    msg += "จำนวนเงินฝาก ( " + addCommas(txnAmt) + " ) มากกว่า ฝากขั้นสูงที่กำหนด ( " + addCommas(MaxDepAmt) + " ) \n";
                    ValaidTxnAmt = false;
                }
            }
            if (CDCode == "D") {
                if (OCFlag == "C") {
                    if ((HoldAmt != null) || (LedgerBal != AvailBal)) {
                        msg += "ไม่สามารถปิดบัญชีได้ เพราะมียอดเงินอายัด หรือมีเช็คเคลียริ่งค้าง โปรดตรวจสอบ! \n";
                        ValaidTxnAmt = false;
                    }
                }
                if (OCFlag != "C") {
                    if (txnAmt < MinWithdrawAmt) {
                        msg += "จำนวนเงินถอน ( " + addCommas(txnAmt) + " ) น้อยกว่า ถอนขั้นต่ำที่กำหนด ( " + addCommas(MinWithdrawAmt) + " ) \n";
                        ValaidTxnAmt = false;
                    }
                    if (txnAmt > MaxWithdrawAmt) {
                        msg += "จำนวนเงินถอน ( " + addCommas(txnAmt) + " ) มากกว่า ถอนขั้นสูงที่กำหนด ( " + addCommas(MaxWithdrawAmt) + " ) \n";
                        ValaidTxnAmt = false;
                    }
                    if (LedgerBal - txnAmt < MinLedgerBal) {
                        msg += "ยอดเงินคงเหลือ หลังถอน ( " + addCommas(LedgerBal - txnAmt) + " ) น้อยกว่ากำหนด ( " + addCommas(MinLedgerBal) + " ) ต้องปิดบัญชี \n";
                        ValaidTxnAmt = false;
                    }
                }
            }
            swal(msg + " โปรดตรวจสอบ!", error, "error");
            debugger
        }

        function CalcTxnAmt(TxnAmt) {
            debugger
            //var res = str.replace("Microsoft", "W3Schools");
            var LedgerBal = parseFloat($("#LedgerBal").val().replace(",", ""));
            var CDCode = $("#TxnCode_CDCode").val();
            var OCFlag = $("#TxnCode_OCFlag").val();
            var Amt = parseFloat($("#Amt").val().replace(",", ""));
            //var NetAmt = 0;

            //var IntAmt = $("#IntAmt").val() * 1;        // ต้องคำนวณดอกเบี้ย

            //var ChargeAmt = $("#TtlfDeposit_ChargeAmt").val() * 1;  // ต้องคำนวณค่าปรับ
            debugger

            if (CDCode == "C") {    //ฝาก
                NetAmt = Amt;
                IntAmt = 0;
                ChargeAmt = 0;
            }
            else {                                      //ถอน
                CalcChargeAmt()
                if (OCFlag == "C") {                    //ปิดบัญชี
                    debugger
                    Amt = LedgerBal + IntAmt - ChargeAmt;
                    NetAmt = Amt;
                } else {
                    if (Amt > LedgerBal) {
                        Amt = LedgerBal - ChargeAmt;
                    }
                }
            }
            debugger
        }

        function CalcChargeAmt() {
            var evt = (e) ? e : window.event;
            var charCode = (evt.keyCode) ? evt.keyCode : evt.which;
            if (charCode > 31 && (charCode < 48 || charCode > 57)) {
                return false;
            }
            return true;
        };

        function ValidateNumber(e) {
            var evt = (e) ? e : window.event;
            var charCode = (evt.keyCode) ? evt.keyCode : evt.which;
            if (charCode > 31 && (charCode < 48 || charCode > 57)) {
                return false;
            }
            return true;
        };

        function addCommas(numIN) {
            //debugger
            if (numIN != null) {
                //debugger
                var parts = numIN.toString().split(".");
                parts[0] = parts[0].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                return parts.join(".");
            }
        }
    });
    </script>
}
